syntax = "proto3";

package kagami_worker;

service Worker {
    rpc sync_from_upstream (SyncRequest) returns (SyncResponse);
    rpc register_accepted (RegisterResponse) returns (RegisterAck);
    rpc health_check (HealthCheckRequest) returns (HealthCheckResponse);
    rpc get_providers (GetProviderRequest) returns (GetProviderResponse);
}

message GetProviderRequest {
    // if nothing provided, list all the providers.
    optional string name = 1;
}

enum ProviderStatus {
    INIT = 0;
    SYNCING = 1;
    SUCCESS = 2;
    FAILED = 3;
}

message GetProviderResponse {
    string name = 1;
    int64 replica_id = 2;
    string upstreamurl = 3;
    ProviderStatus status = 4;
}

message SyncRequest {
    // if nothing provided, sync all the providers on a worker.
    optional string name = 1;
}

message SyncResponse {
    int32 status = 1;
    string message = 2;
}

message RegisterResponse {
    bool accepted = 1;
}

message RegisterAck {
    string message = 1;
}

message HealthCheckRequest {
    string supervisor_addr = 1;
}

message HealthCheckResponse {
    string worker_addr = 1;
}
